<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddDigitalOutputButton" xml:space="preserve">
    <value>Ajouter une sortie digitale</value>
  </data>
  <data name="AddMatrixLedOutputButton" xml:space="preserve">
    <value>Ajouter une sortie de matrice de LED</value>
  </data>
  <data name="AddPoExtBusOutputButton" xml:space="preserve">
    <value>Ajouter une sortie PoExtBus</value>
  </data>
  <data name="AddPoKeysButton" xml:space="preserve">
    <value>Ajouter une PoKeys</value>
  </data>
  <data name="AddPololuMaestroButton" xml:space="preserve">
    <value>Ajouter une Pololu Maestro</value>
  </data>
  <data name="AddServoButton" xml:space="preserve">
    <value>Ajouter un servo</value>
  </data>
  <data name="AddServoPointButton" xml:space="preserve">
    <value>Ajouter un point</value>
  </data>
  <data name="AddSevenSegmentDisplayButton" xml:space="preserve">
    <value>Ajouter un afficheur 7 segments</value>
  </data>
  <data name="ApplicationStartedBalloonTip" xml:space="preserve">
    <value>F4ToPokeys est démarré</value>
  </data>
  <data name="ApplicationTitle" xml:space="preserve">
    <value>F4ToPokeys</value>
  </data>
  <data name="ConfigLoadErrorCaption" xml:space="preserve">
    <value>Erreur de lecture de la configuration</value>
  </data>
  <data name="ConfigSaveErrorCaption" xml:space="preserve">
    <value>Erreur de sauvegarde de la configuration</value>
  </data>
  <data name="DecrementTotalSizeButton" xml:space="preserve">
    <value>Supprimer un chiffre</value>
  </data>
  <data name="DigitalOutputConfigCaption" xml:space="preserve">
    <value>Sortie digitale</value>
  </data>
  <data name="DigitalOutputErrorBadIOType" xml:space="preserve">
    <value>Cette entrée/sortie n'est pas une sortie digitale</value>
  </data>
  <data name="DigitalOutputErrorGetIOType" xml:space="preserve">
    <value>Erreur de lecture du type d'entrée/sortie</value>
  </data>
  <data name="DigitalOutputErrorWrite" xml:space="preserve">
    <value>Erreur d'écriture de la valeur de la sortie digitale</value>
  </data>
  <data name="FalconLightConsumerConfigOffButton" xml:space="preserve">
    <value>Off</value>
  </data>
  <data name="FalconLightConsumerConfigOnButton" xml:space="preserve">
    <value>On</value>
  </data>
  <data name="FalconSamplingInterval" xml:space="preserve">
    <value>Intervalle de lecture des données Falcon:</value>
  </data>
  <data name="FalconSamplingUnit" xml:space="preserve">
    <value>millisecondes</value>
  </data>
  <data name="FractionalPartSizeCaption" xml:space="preserve">
    <value>Nombre maximum de chiffres après la virgule</value>
  </data>
  <data name="IncrementTotalSizeButton" xml:space="preserve">
    <value>Ajouter un chiffre</value>
  </data>
  <data name="IntegralPartMinSizeCaption" xml:space="preserve">
    <value>Nombre minimum de chiffres avant la virgule</value>
  </data>
  <data name="MatrixLedErrorNotEnabled" xml:space="preserve">
    <value>Cette matrice de LED n'est pas activée</value>
  </data>
  <data name="MatrixLedErrorWrite" xml:space="preserve">
    <value>Erreur d'écriture de la valeur de la matrice de LED</value>
  </data>
  <data name="MatrixLedOutputConfigCaption" xml:space="preserve">
    <value>Sortie de matrice de LED</value>
  </data>
  <data name="MatrixLedOutputConfigColumn" xml:space="preserve">
    <value>Colonne</value>
  </data>
  <data name="MatrixLedOutputConfigRow" xml:space="preserve">
    <value>Ligne</value>
  </data>
  <data name="MatrixLedPixelErrorNotEnabled" xml:space="preserve">
    <value>Cette sortie ({0}, {1}) de matrice de LED n'est pas activée</value>
  </data>
  <data name="MenuItemConfigure" xml:space="preserve">
    <value>Configurer</value>
  </data>
  <data name="MenuItemQuit" xml:space="preserve">
    <value>Quitter</value>
  </data>
  <data name="PadFractionalPartWithZeroCaption" xml:space="preserve">
    <value>Taille fixe</value>
  </data>
  <data name="PoExtBusErrorNotEnabled" xml:space="preserve">
    <value>Le PoExtBus n'est pas activée</value>
  </data>
  <data name="PoExtBusErrorWrite" xml:space="preserve">
    <value>Erreur d'écriture de la valeur du PoExtBus</value>
  </data>
  <data name="PoExtBusOutputConfigCaption" xml:space="preserve">
    <value>Sortie PoExtBus</value>
  </data>
  <data name="PoExtBusOutputConfigDevice" xml:space="preserve">
    <value>Périphérique</value>
  </data>
  <data name="PoKeysConfigCaption" xml:space="preserve">
    <value>PoKeys</value>
  </data>
  <data name="PokeysConnectError" xml:space="preserve">
    <value>Erreur de connexion à la PoKeys</value>
  </data>
  <data name="PokeysNotFoundError" xml:space="preserve">
    <value>Non trouvée</value>
  </data>
  <data name="PololuMaestroConfigCaption" xml:space="preserve">
    <value>Pololu Maestro</value>
  </data>
  <data name="PololuMaestroNotFoundError" xml:space="preserve">
    <value>Non trouvée</value>
  </data>
  <data name="RemoveButton" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="RemoveDigitalOutputCaption" xml:space="preserve">
    <value>Supprimer une sortie digitale</value>
  </data>
  <data name="RemoveDigitalOutputText" xml:space="preserve">
    <value>Supprimer la sortie digitale {0} ?</value>
  </data>
  <data name="RemoveMatrixLedOutputCaption" xml:space="preserve">
    <value>Supprimer une sortie de matrice de LED</value>
  </data>
  <data name="RemoveMatrixLedOutputText" xml:space="preserve">
    <value>Supprimer la sortie ({1}, {2}) de la matrice de LED {0} ?</value>
  </data>
  <data name="RemovePoExtBusOutputCaption" xml:space="preserve">
    <value>Supprimer une sortie PoExtBus</value>
  </data>
  <data name="RemovePoExtBusOutputText" xml:space="preserve">
    <value>Supprimer la sortie PoExtBus {1} du périphérique {0} ?</value>
  </data>
  <data name="RemovePoKeysCaption" xml:space="preserve">
    <value>Supprimer une PoKeys</value>
  </data>
  <data name="RemovePoKeysText" xml:space="preserve">
    <value>Supprimer la PoKeys {0} ?</value>
  </data>
  <data name="RemovePololuMaestroCaption" xml:space="preserve">
    <value>Supprimer une Pololu Maestro</value>
  </data>
  <data name="RemovePololuMaestroText" xml:space="preserve">
    <value>Supprimer la Pololu Maestro {0} ?</value>
  </data>
  <data name="RemoveServoCaption" xml:space="preserve">
    <value>Supprimer un servo</value>
  </data>
  <data name="RemoveServoText" xml:space="preserve">
    <value>Supprimer le servo {0} ?</value>
  </data>
  <data name="RemoveSevenSegmentDisplayCaption" xml:space="preserve">
    <value>Supprimer un afficheur 7 segments</value>
  </data>
  <data name="RemoveSevenSegmentDisplayText" xml:space="preserve">
    <value>Supprimer l'afficheur 7 segments {0} ?</value>
  </data>
  <data name="ServoConfigCaption" xml:space="preserve">
    <value>Servo</value>
  </data>
  <data name="ServoPointFalconValue" xml:space="preserve">
    <value>Valeur Falcon</value>
  </data>
  <data name="ServoPointServoValue" xml:space="preserve">
    <value>Valeur Servo</value>
  </data>
  <data name="SevenSegmentDigitColumnCaption" xml:space="preserve">
    <value>Numéro de colonne du chiffre dans la matrice de LED</value>
  </data>
  <data name="SevenSegmentDigitRowCaption" xml:space="preserve">
    <value>Numéro de ligne du chiffre dans la matrice de LED</value>
  </data>
  <data name="SevenSegmentDisplayConfigCaption" xml:space="preserve">
    <value>Afficheur 7 segments</value>
  </data>
  <data name="SevenSegmentInvertRowColumnOption" xml:space="preserve">
    <value>Echanger les lignes et les colonnes de la matrice de LED</value>
  </data>
  <data name="SevenSegmentSegmentColumnCaption" xml:space="preserve">
    <value>Numéro de colonne du segment dans la matrice de LED :</value>
  </data>
  <data name="SevenSegmentSegmentRowCaption" xml:space="preserve">
    <value>Numéro de ligne du segment dans la matrice de LED :</value>
  </data>
</root>